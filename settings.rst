.. SimpleUI documentation master file, created by
   sphinx-quickstart on Sat May 16 14:23:51 2020.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

Настройки приложения
=================================

Передача настроек через файл или QR-код
------------------------------------------

Настройки должны быть оформлены в виде JSON-строки или текстового файла в формате JSON. Примеры настроек есть во вложении

**IntentScannerMessage** – имя сообщения сканера

**IntentScannerVariable** – имя переменной сообщения сканера

**IntentScannerLength** – имя переменной, в которой храниться длина штрихкода, если он предаётся в виде байт-массива а не строки

**IntentScanner** – режим работы сканера через интент

**CategoryDefault** – фильтр по категориям сообщений для сканера штрихкодов

**ExchangeFolder** – папка обмена. Выбирает папку обмена, при необходимости создает (создание папки работает в Android до 11 версии)

**RawConfigurationServiceON** – произвольная авторизация

**GitFormat** – формат для хранения конфигураций на github.com

**RawConfigurationURL** – URL при варианте произвольной авторизации

**RawConfigurationServiceAuth** – строка авторизации, заданная вручную для произвольной авторизации

**GitCommitsURL** – URL коммитов с GitHub

**GitStoreURL** – URL репозитория на GitHub для использования в качестве магазина

**OnlineSplitMode** – «разделенный режим» конфигурации и обработчиков

**onlineURLListener** – URL обработчиков для разделенного режима

**onlineURL** – URL конфигурации для любого режима

**onlineUser** – пользователь конфигурации для любого режима

**onlineUserListener** – пользователь обработчиков для разделенного режима

**onlineCode** – код справочника Мобильные клиенты

**onlinePass** – пароль пользователя конфигурации для любого режима

**onlinePassListener** – пароль пользователя обработчиков

**backendURL** – URL PostgREST – устарело. Для соединения с Postgre

**backendUser** – пользователь Postrgre

**oDataURL** – URL OData

**Service_URL** – URL сервиса технической информации (подписка на изменение настроек)

**offSettings** – запрет на настройки

**offChat** – отключение чата

**offToDo** – отключение списка дел

**offlineMode** – принудительный оффлайн режим

**beep** – сигнал при каждом сканировании

**torch** – подсветка при сканировании камерой

**dialogOnBackPressed** – задавать вопрос при закрытии основной программы

**gps** – получение координат GPS в Переменные перманентно

**timer** – интервал таймера

**connection_limit** – максимальное время попытки соединения для онлайн обработчиков, 0 – неограничено

**hardwarescan** – отключение кнопки сканирование камерой для экранов со штрих-кодом (для аппаратного сканера)

**conf_id** – ID конфигурации для запросов вида /get_configuration?confid=...

**configuration** -  загрузка текста конфигурации. Можно передать в настройках конфигурацию (через файл), она будет сразу же загружена


Передача конфигурации на устройство в режиме OFF-line через прямой запрос на сервер
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

При работе через веб-сервер на стороне учетной системы, каждый раз когда скачивается конфигурация, она сохраняется на мобильном устройстве. При этом в настройках можно увидеть дату последнего скачивания (last update)

Если же работа не предусматривает наличие веб-сревера на стороне бекенда, то можно передать конфигурацию на устройство прямым HTTP-запросом. Для этого надо знать адрес веб сервиса моб. клиента который можно посмотреть в настройках. Далее на этот адрес нужно послать POST-запрос **SetConf** в теле которого- текст конфигурации (содержимое UI-файла) и конфигурация будет записана в память, после чего можно обновить или перезагрузить программу чтобы она применилась. 



Централизованное управление настройками и устройствами через веб-сервис
---------------------------------------------------------------------------

Мобильные рабочие места могут управляться централизованно, адресно. Т.е. по AndroidID (уникальный ID устройства) можно отправить на мобильное устройство новые настройки или сменить конфигурацию. Приложение при запуске отправляет запрос service_broadcast/{AndroidID} на URL заданный в настройке Service_URL (если такая настройка не задана, то на URL конфигурации). В запросе передается AndroidID и модель устройства для организации на строне ценстрально базы справочника устройств.

В ответ сервис может отправить JSON определенной структуры на смену настроек (возможно что позднее через этот канал будут передаваться другие команды). Это может быть {"command":"update","uuid":UID,"value":JSON настроек}, где UID - произвольный UID, сгенерированный для идентификации конкретной команды, для ответного токена. JSON настроек - JSON строка с настройками из предыдущего раздела

После получения настроек, если все в порядке в ответ отправляется запрос /service_response/{AndroidID}/{uuid}

Пример организации изменения настроект есть в старом комплекте разработчика в демо-базе 1С. Документ "Изменение настроек"
